package vue;

import java.awt.BorderLayout;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

import entite.Bus;

public class ViewBus extends JFrame{

	 private JTextField textFieldBusId;
	    private JTextField textFieldDescription;
	    private JTextField textFieldStatus;
	    private JTextArea textAreaResults;
	    private JButton buttonConnect;
	    private JButton buttonFetchBuses;
	    private JButton buttonAddBus;
	    private JButton buttonUpdateBus;
	    private JButton buttonDeleteBus;

	    private List<Bus> busList = new ArrayList<>();

	    public void BusManagementUI() {
	        setTitle("Bus Management System");
	        setSize(600, 400);
	        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
	        setLayout(new BorderLayout());

	        initUI();
	    }

	    private void initUI() {
	        // ... (le reste du code de l'interface reste le mÃªme)

	        // Panel for adding a bus
	        JPanel addBusPanel = createAddBusPanel();

	        // Panel for bus operations
	        JPanel busOperationsPanel = createBusOperationsPanel();

	        // Panel for displaying results
	        JPanel resultsPanel = createResultsPanel();

	        // Add panels to the main frame
	        add(addBusPanel, BorderLayout.WEST);
	        add(busOperationsPanel, BorderLayout.SOUTH);
	        add(resultsPanel, BorderLayout.CENTER);
	    }

	    private JPanel createAddBusPanel() {
	        JPanel addBusPanel = new JPanel(new GridLayout(3, 2));
	        textFieldDescription = new JTextField(10);
	        textFieldStatus = new JTextField(10);
	        buttonAddBus = new JButton("Add Bus");
	        buttonAddBus.addActionListener(new ActionListener() {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                addBus();
	            }
	        });
	        addBusPanel.add(new JLabel("Description:"));
	        addBusPanel.add(textFieldDescription);
	        addBusPanel.add(new JLabel("Status:"));
	        addBusPanel.add(textFieldStatus);
	        addBusPanel.add(buttonAddBus);

	        return addBusPanel;
	    }

	    private JPanel createBusOperationsPanel() {
	        JPanel busOperationsPanel = new JPanel(new FlowLayout());
	        buttonFetchBuses = new JButton("Fetch Buses");
	        buttonFetchBuses.addActionListener(new ActionListener() {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                fetchAndDisplayBuses();
	            }
	        });
	        buttonUpdateBus = new JButton("Update Bus");
	        buttonUpdateBus.addActionListener(new ActionListener() {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                updateBus();
	            }
	        });
	        buttonDeleteBus = new JButton("Delete Bus");
	        buttonDeleteBus.addActionListener(new ActionListener() {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                deleteBus();
	            }
	        });
	        busOperationsPanel.add(buttonFetchBuses);
	        busOperationsPanel.add(buttonUpdateBus);
	        busOperationsPanel.add(buttonDeleteBus);

	        return busOperationsPanel;
	    }

	    private JPanel createResultsPanel() {
	        JPanel resultsPanel = new JPanel(new BorderLayout());
	        textAreaResults = new JTextArea();
	        JScrollPane scrollPane = new JScrollPane(textAreaResults);
	        resultsPanel.add(scrollPane, BorderLayout.CENTER);

	        return resultsPanel;
	    }

	    private void addBus() {
	        Bus newBus = new Bus();
	        newBus.setDescription(textFieldDescription.getText());
	        newBus.setEtat(textFieldStatus.getText());
	        busList.add(newBus);

	        textAreaResults.setText("Bus added: " + newBus);
	    }


	    private void fetchAndDisplayBuses() {
	        textAreaResults.setText("Buses:\n");
	        for (Bus bus : busList) {
	            textAreaResults.append(bus.toString() + "\n");
	        }
	    }

	    private void updateBus() {
	        // Implement logic to update a bus
	        textAreaResults.setText("Bus updated!");
	    }

	    private void deleteBus() {
	        // Implement logic to delete a bus
	        textAreaResults.setText("Bus deleted!");
	    }

	    public static void main(String[] args) {
	        SwingUtilities.invokeLater(new Runnable() {
	            @Override
	            public void run() {
	                new Bus().setVisible(true);
	            }
	        });
	    }
	}

	class BusPopup extends JFrame {
	    private JTextField textFieldBusId;
	    private JTextField textFieldDescription;
	    private JTextField textFieldStatus;

	    public BusPopup() {
	        setTitle("Add Bus");
	        setSize(300, 200);
	        setLayout(new GridLayout(4, 2));

	        initUI();
	    }

	    private void initUI() {
	        textFieldBusId = new JTextField(10);
	        textFieldDescription = new JTextField(10);
	        textFieldStatus = new JTextField(10);
	        JButton buttonAdd = new JButton("Add");
	        buttonAdd.addActionListener(new ActionListener() {
	            @Override
	            public void actionPerformed(ActionEvent e) {
	                addBus();
	            }
	        });

	        add(new JLabel("Bus ID:"));
	        add(textFieldBusId);
	        add(new JLabel("Description:"));
	        add(textFieldDescription);
	        add(new JLabel("Status:"));
	        add(textFieldStatus);
	        add(new JLabel()); // Empty label for layout
	        add(buttonAdd);
	    }

	    private void addBus() {
	        // Implement logic to add a bus from the pop-up
	        // You can add the bus to the busList or perform database operations
	        setVisible(false);
	    }
}
