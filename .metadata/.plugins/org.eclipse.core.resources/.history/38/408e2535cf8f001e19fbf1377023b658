package vue;

import java.awt.Color;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.SwingUtilities;
import javax.swing.WindowConstants;

import entite.Bus;

public class ViewBus extends JFrame {

    private JTextField textFieldDescription;
    private JTextField textFieldStatus;
    private JTextArea textAreaResults;
    private JButton buttonFetchBuses;
    private JButton buttonAddBus;
    private JButton buttonUpdateBus;
    private JButton buttonDeleteBus;

    private List<Bus> busList = new ArrayList<>();

    public ViewBus() {
        setTitle("Bus Management System");
        setSize(800, 600);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setLayout(new GridBagLayout()); // Utilisation du GridBagLayout

        initUI();
    }

    private void initUI() {
        // Panel for adding a bus
        JPanel addBusPanel = createAddBusPanel();
        addBusPanel.setBorder(BorderFactory.createTitledBorder("Add Bus"));

        // Panel for bus operations
        JPanel busOperationsPanel = createBusOperationsPanel();
        busOperationsPanel.setBorder(BorderFactory.createTitledBorder("Bus Operations"));

        // Panel for displaying results
        JPanel resultsPanel = createResultsPanel();
        resultsPanel.setBorder(BorderFactory.createTitledBorder("Results"));

        // Ajouter les panels avec les contraintes
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(10, 10, 10, 10);

        add(addBusPanel, gbc);

        gbc.gridy = 1;
        add(busOperationsPanel, gbc);

        gbc.gridy = 2;
        add(resultsPanel, gbc);
    }

    private JPanel createAddBusPanel() {
        JPanel addBusPanel = new JPanel(new GridBagLayout()); // Utilisation du GridBagLayout
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.insets = new Insets(5, 5, 5, 5);

        textFieldDescription = createStyledTextField();
        textFieldStatus = createStyledTextField();
        buttonAddBus = new JButton("Add Bus");
        buttonAddBus.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addBus();
            }
        });

        addGridBagConstraints(addBusPanel, new JLabel("Description:"), gbc);
        gbc.gridx = 1;
        addGridBagConstraints(addBusPanel, textFieldDescription, gbc);
        gbc.gridx = 0;
        gbc.gridy = 1;
        addGridBagConstraints(addBusPanel, new JLabel("Status:"), gbc);
        gbc.gridx = 1;
        addGridBagConstraints(addBusPanel, textFieldStatus, gbc);
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        addGridBagConstraints(addBusPanel, buttonAddBus, gbc);

        return addBusPanel;
    }

    private JTextField createStyledTextField() {
        JTextField textField = new JTextField(10);
        textField.setFont(new Font("Arial", Font.PLAIN, 14));
        textField.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        return textField;
    }

    private JPanel createBusOperationsPanel() {
        JPanel busOperationsPanel = new JPanel();
        buttonFetchBuses = new JButton("Fetch Buses");
        buttonUpdateBus = new JButton("Update Bus");
        buttonDeleteBus = new JButton("Delete Bus");

        busOperationsPanel.add(buttonFetchBuses);
        busOperationsPanel.add(buttonUpdateBus);
        busOperationsPanel.add(buttonDeleteBus);

        return busOperationsPanel;
    }

    private JPanel createResultsPanel() {
        JPanel resultsPanel = new JPanel(new GridBagLayout());
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.BOTH;
        gbc.insets = new Insets(5, 5, 5, 5);

        textAreaResults = new JTextArea();
        textAreaResults.setEditable(false);
        JScrollPane scrollPane = new JScrollPane(textAreaResults);

        addGridBagConstraints(resultsPanel, scrollPane, gbc);

        return resultsPanel;
    }

    private void addBus() {
        Bus newBus = new Bus();
        newBus.setDescription(textFieldDescription.getText());
        newBus.setEtat(textFieldStatus.getText());
        busList.add(newBus);

        textAreaResults.setText("Bus added: " + newBus);
    }

    private void fetchAndDisplayBuses() {
        textAreaResults.setText("Buses:\n");
        for (Bus bus : busList) {
            textAreaResults.append(bus.toString() + "\n");
        }
    }

    private void updateBus() {
        // Implement logic to update a bus
        textAreaResults.setText("Bus updated!");
    }

    private void deleteBus() {
        // Implement logic to delete a bus
        textAreaResults.setText("Bus deleted!");
    }

    private void addGridBagConstraints(JPanel panel, java.awt.Component component, GridBagConstraints gbc) {
        panel.add(component, gbc);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                new ViewBus().setVisible(true);
            }
        });
    }
}

class BusPopup extends JFrame {
    private JTextField textFieldBusId;
    private JTextField textFieldDescription;
    private JTextField textFieldStatus;

    public BusPopup() {
        setTitle("Add Bus");
        setSize(300, 200);
        setLayout(new GridLayout(4, 2, 10, 10));

        initUI();
    }

    private void initUI() {
        textFieldBusId = createStyledTextField();
        textFieldDescription = createStyledTextField();
        textFieldStatus = createStyledTextField();
        JButton buttonAdd = new JButton("Add");
        buttonAdd.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                addBus();
            }
        });

        add(new JLabel("Bus ID:"));
        add(textFieldBusId);
        add(new JLabel("Description:"));
        add(textFieldDescription);
        add(new JLabel("Status:"));
        add(textFieldStatus);
        add(new JPanel()); // Panel vide pour l'espacement
        add(buttonAdd);
    }

    private JTextField createStyledTextField() {
        JTextField textField = new JTextField(10);
        textField.setFont(new Font("Arial", Font.PLAIN, 14));
        textField.setBorder(BorderFactory.createLineBorder(Color.BLACK));
        return textField;
    }

    private void addBus() {
        // Implement logic to add a bus from the pop-up
        // You can add the bus to the busList or perform database operations
        setVisible(false);
    }
}
